<html>
  <head>
    <title>OurMemory</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/public/jquery-1.8.0.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/public/username.js"></script>
    <link rel="stylesheet" href="/public/bootstrap.css" />
    <script src="/public/bootstrap.js"></script>
    <link rel="stylesheet" href="/public/app.css" />
  </head>
  <body>
    <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">OurMemory</a>
        </div>
        <div class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </div>

    <div class="container">
      <div id="dashboard">
        <div class="row" />
          <div class="col-md-4">
            <b>Users</b>
            <hr />
            <div id="users"></div>
            <hr class="visible-xs visible-sm"/>
          </div>
          <div class="col-md-8">
            <input class="col-md-12" id="data" placeholder="send message" />
            <hr/>
            <form id="photoupload" enctype="text/plain" method="post">
              <input type="file" id="photochoose" onchange="document.getElementById('img').src=photoPath(this);"/>
              <input type="submit" id="photosubmit" value="Upload Image" /> 
            </form>
            <div id="conversation"></div>
          </div>
          <div id="album">
            <b>album</b>
            <p><img id="img" height="125" width="125" /></p>
          </div> 
      </div>
      <script>
        function getName() {
          var name = window.names[Math.floor(Math.random() * window.names.length)];

          var tokens = name.split(',');

          if(tokens.length > 1) {
            return $.trim(tokens[1]) + " " + $.trim(tokens[0]);
          }

          return name;
        }


        function escaped(s) {
          return $("<div></div>").html(s).html();
        }

        
        function photoPath(photo){
          if(photo){ 
            //ie 
            if (window.navigator.userAgent.indexOf("MSIE")>=1) { 
              photo.select();
              return document.selection.createRange().text; 
            } 
            //firefox 
            else if(window.navigator.userAgent.indexOf("Chrome")>=1){ 
              if(photo.files){
                return window.URL.createObjectURL(photo.files.item(0)); 
              }
              return photo.value; 
            }
            return photo.value;
          }
        }

        function searchUrlFor(name) {
          return name;
        }

        var name = getName();

        $("#data").attr('placeholder', 'send message as ' + name);

        var socket = io.connect('/');

        // on connection to server, ask for user's name with an anonymous callback
        socket.on('connect', function() {
          // call the server-side function 'adduser' and send one parameter (value of prompt)
          socket.emit('adduser', name);

        });

        // listener, whenever the server emits 'updatechat', this updates the chat body
        socket.on('updatechat', function (username, data) {
          $('#conversation').append('<b>'+ escaped(username) + ':</b> ' + escaped(data) + "<br/>");
        });

        //right or not, when the client upload a photo, update the album
        // socke.on('updatealbum', function(photo){
        //   $('#album').append('<p><img src="' + photoPath(photo) + '" width="128" height="128"/></p>');
        // });

        // listener, whenever the server emits 'updateusers', this updates the username list
        socket.on('updateusers', function(data) {
          $('#users').empty();
          $.each(data, function(key, value) {
            $('#users').append('<div>' + key + '</div>');
          });
        });

        socket.on('servernotification', function (data) {
          if(data.connected) {
            if(data.to_self) data.username = "you";
            $('#conversation').append('connected: '+ escaped(data.username) + "<br/>");
          } else {
            $('#conversation').append('disconnected:' + escaped(data.username) + "<br/>");
          }

        });

        // on load of page
        $(function(){
          // when the client hits ENTER on their keyboard
          $('#data').keypress(function(e) {
            if(e.which == 13) {
              var message = $('#data').val();
              $('#data').val('');
              // tell server to execute 'sendchat' and send along one parameter
              socket.emit('sendchat', message);
            }
          });

          //right or not
          // $('#photoupload').submit(function(){
          //   var photo = photoPath(('#photochoose'));
          //   socket.emit('addphoto', photo);
  
          //   return false;
          // });

        });
      </script>
    </div>
  </body>
</html>
